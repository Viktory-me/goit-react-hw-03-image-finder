{"version":3,"sources":["Components/Services/imagesAPI.js","Components/SearchBar/Searchbar.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","Searchbar","state","value","handleNameChange","e","target","setState","handleSubmit","preventDefault","trim","props","onSubmit","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleClearSearchbar","this","className","type","onChange","onClick","autoComplete","autoFocus","placeholder","Component","Button","scroll","setTimeout","window","scrollBy","top","document","documentElement","clientHeight","behavior","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","currentTarget","addEventListener","removeEventListener","src","alt","createPortal","ImageGalleryItem","showModal","toggleModal","largeImageUrl","ImageGallery","images","map","image","index","webformatURL","tags","largeImageURL","App","imageName","error","status","fetchImagesOnClick","imagesAPI","newImages","total","hits","scrollTo","scrollHeight","catch","onClickLoadMore","prevState","handleFormSubmit","prevProps","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c4ab6739.chunk.js","sourcesContent":["function fetchImages(name, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=21770810-71d636d270901957bd723d7c5&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(\"Not found. Try to change name\"));\r\n  });\r\n}\r\n\r\nconst api = { fetchImages };\r\n\r\nexport default api;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleNameChange = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.value.trim() === \"\") {\r\n      toast.dark(\"ðŸ¦„Please enter search query\", {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.value);\r\n  };\r\n\r\n  handleClearSearchbar = () => {\r\n    this.setState({ value: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <header className='Searchbar'>\r\n        <form className='SearchForm' onSubmit={this.handleSubmit}>\r\n          <button type='submit' className='SearchForm-button'></button>\r\n          <input\r\n            value={value}\r\n            onChange={this.handleNameChange}\r\n            onClick={this.handleClearSearchbar}\r\n            className='SearchForm-input'\r\n            type='text'\r\n            autoComplete='off'\r\n            autoFocus\r\n            placeholder='Search images and photos'\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Button extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    page: PropTypes.number,\r\n  };\r\n\r\n  scroll = () => {\r\n    this.props.onClick();\r\n    setTimeout(() => {\r\n      window.scrollBy({\r\n        top: document.documentElement.clientHeight - 130,\r\n        behavior: \"smooth\",\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.scroll} className='Button' type='button'>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return createPortal(\r\n      <div className='Overlay' onClick={this.handleBackdropClick}>\r\n        <div className='Modal'>\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageUrl: PropTypes.string.isRequired,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { src, alt, largeImageUrl } = this.props;\r\n    const { showModal } = this.state;\r\n    return (\r\n      <li className='ImageGalleryItem'>\r\n        <img\r\n          onClick={this.toggleModal}\r\n          src={src}\r\n          alt={alt}\r\n          className='ImageGalleryItem-image'\r\n        />\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nfunction ImageGallery({ images, onClick }) {\r\n  return (\r\n    <ul className='ImageGallery' onClick={onClick}>\r\n      {images.map((image, index) => (\r\n        <ImageGalleryItem\r\n          key={index}\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          largeImageUrl={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import { Component } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport imagesAPI from \"./Components/Services/imagesAPI\";\nimport \"./App.css\";\nimport Searchbar from \"./Components/SearchBar/Searchbar\";\nimport Button from \"./Components/Button/Button\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery.jsx\";\n\nexport default class App extends Component {\n  state = {\n    imageName: \"\",\n    images: [],\n    error: null,\n    status: \"idle\",\n    page: 1,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const { page, imageName } = this.state;\n\n    if (prevState.imageName !== imageName) {\n      this.setState({ images: [] });\n      this.fetchImagesOnClick(imageName, page);\n    }\n\n    if (prevState.page !== page && page !== 1) {\n      this.fetchImagesOnClick(imageName, page);\n    }\n  }\n\n  fetchImagesOnClick = (imageName, page) => {\n    this.setState({ status: \"pending\" });\n\n    imagesAPI\n      .fetchImages(imageName, page)\n      .then((newImages) => {\n        if (newImages.total === 0) {\n          this.setState({ status: \"idle\" });\n          toast.error(\"Sorry, something went wrong\");\n        } else {\n          this.setState(({ images }) => ({\n            images: [...images, ...newImages.hits],\n            status: \"resolved\",\n          }));\n          page > 1 &&\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: \"smooth\",\n            });\n          return;\n        }\n        return Promise.reject(new Error(\"Invalid request\"));\n      })\n      .catch((error) => this.setState({ error, status: \"rejected\" }));\n  };\n\n  onClickLoadMore = () => {\n    this.setState((prevState) => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  handleFormSubmit = (value) => {\n    this.setState({ imageName: value });\n  };\n\n  render() {\n    const { status, images } = this.state;\n\n    switch (status) {\n      case \"idle\":\n        return (\n          <div>\n            <Searchbar onSubmit={this.handleFormSubmit} />\n          </div>\n        );\n\n      case \"pending\":\n        return (\n          <div>\n            <Searchbar onSubmit={this.handleFormSubmit} />\n            <ImageGallery images={images} />\n            <Loader />\n            <Button onClick={this.onClickLoadMore} />\n          </div>\n        );\n      case \"resolved\":\n        return (\n          <div>\n            <Searchbar onSubmit={this.handleFormSubmit} />\n            <ImageGallery images={images} />\n            <Button onClick={this.onClickLoadMore} />\n          </div>\n        );\n\n      default:\n        return (\n          <div>\n            <Searchbar onSubmit={this.handleFormSubmit} />\n            <ToastContainer\n              position='top-center'\n              autoClose={5000}\n              hideProgressBar={false}\n              newestOnTop\n              closeOnClick\n              rtl={false}\n              pauseOnFocusLoss\n              draggable\n              pauseOnHover\n            />\n          </div>\n        );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}